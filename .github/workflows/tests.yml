name: CI Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    # Démarre un service PostgreSQL pour les tests backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d mydatabase"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        part: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ${{ matrix.part }}
        run: npm ci

      - name: Run linter
        working-directory: ${{ matrix.part }}
        run: npm run lint --if-present

      - name: Generate Prisma Client (backend only)
        if: matrix.part == 'backend'
        working-directory: backend
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/mydatabase?schema=public"
        run: npx prisma generate

      - name: Run tests
        # Exécute les tests seulement si le script "test" existe
        # Définit DATABASE_URL pour les tests backend
        working-directory: ${{ matrix.part }}
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5432/mydatabase?schema=public"
        run: npm test --if-present
